FlowLib:

Copyright (c) ICG. All rights reserved.

Institute for Computer Graphics and Vision
Graz University of Technology / Austria

CONTACT:
 Manuel Werlberger: werlberger@icg.tugraz.at


THERMS OF USAGE:
  *) PERSONAL, NON-COMMERCIAL or ACADEMIC USAGE:
     You are free to use this software for whatever you like. If you use this algorithm
     for a scientific publication, please cite the following paper:
 
     @INPROCEEDINGS{Werlberger2009a,
     author = {Manuel Werlberger and Werner Trobin and Thomas Pock and Andreas Wedel and Daniel Cremers and Horst Bischof}
       title = {Anisotropic {Huber-L1} Optical Flow},
       booktitle = {Proceedings of the British Machine Vision Conference (BMVC)},
       month = {September}, 
       year = {2009},
       address = {London, UK}
     }

     or

     @INPROCEEDINGS{Werlberger2010,
       author = {Manuel Werlberger and Thomas Pock and Horst Bischof},
       title = {Motion Estimation with Non-Local Total Variation Regularization},
       booktitle = {{IEEE} Computer Society Conference on Computer Vision and Pattern Recognition (CVPR)},
       month = {June},
       year = {2010},
	     address = {San Francisco, CA, USA}
      }

      (dependent on the algorithm you use) Please note that the nonlocal
      variant isn't exactly the same as presented in the CVPR paper. The
      current library only uses grayscale images whereas the CVPR work relied
      on LAB images for calculating the nonlocal weights.

  *) COMMERCIAL USAGE:
     It is not allowed to use any content of this package for any commercial use or any
     advertisement for upcoming commercial products. If you want to use any content for
     such a purpose please contact DI. Dr. Horst Bischof <bischof(at)icg.tugraz.at>.



PREREQUISITES:
  Apple:
    NVIDIA CUDA 3.1
    NVIDIA CUDA SDK 3.1
  others:
    NVIDIA CUDA 3.2
    NVIDIA CUDA SDK 3.2

  I included the library files for CUDA but there might be problems if you are
  using a different linux distribution. The libraries (libiu and libflow) are
  built on an up-to-date (10.01.2010) Ubuntu Maverick 64-bit. For Windows I
  used XP for the 32-bit binaries and Windows 7 for the 64-bit version. Apple
  binaries are built with on Mac OS 10.6.6. As there are some issues with Cuda
  3.2 on Mac with our libraries (unsolved yet) we use the 3.1 version of the
  Toolkit and SDK.

  For the (simple) demo application I use cmake > 2.8.

LIBRARY DETAILS:

  The main differences to the previous release is the removal of IPP and NPP
  dependencies. The library now relies on pure CPU and GPU images and does not
  need any IPP/NPP functionality. The wrapper functions to IPP are still there
  for convenience but in a header-only format and therefore IPP is not needed
  for any usage.

  When there is the emphasis to use more functionality of our base library
  (ImageUtilities), the source-code is available and you can use a self-built
  version with the FlowLib. To build the current binaries I used the git
  version 6293611 (2011-01-10). The repositor is available at
  http://gitorious.org/imageutilities.

  The usage of the library changed a bit again. The various algorithms are now
  available through the model parameter. I hope to release a document soon
  where all different algorithms are presented and its usage and differences is
  shown.

DEMO:

  In the folder simple_test a demo is showing the usage of imageutilities and
  flowlib. The main thing is to set the VMLIBRARIES_ROOT directory to the
  folder where the include, lib and cmake direcotories of the package are. When
  using cmake to build the binaries the CMAKE_MODULE_PATH has to be set to the
  given cmake directory like in the CMakeLists.txt file of the simple test
  application. In the cpp file two paths are given. First path is a
  demonstration on how to use external memory with the image classes (here
  OpenCV) and second the usage of directly using I/O functions of the
  imageutilties (very simple and effective).

DISCLAIMER:
  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED 
  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO 
  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.